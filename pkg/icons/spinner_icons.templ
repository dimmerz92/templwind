package icons

import "github.com/dimmerz92/templwind/pkg/lib"
import "github.com/dimmerz92/templwind/pkg/themes"
import "fmt"
import tw "github.com/Oudwins/tailwind-merge-go/pkg/twmerge"

type SpinnerIcon string

const (
	SimpleSpinner SpinnerIcon = "border-5 rounded-full border-current border-b-spinner-accent animate-spin"

	GrowingSpinner SpinnerIcon = "relative rounded-full animate-spin before:absolute before:content-[''] before:inset-0 before:border-5 before:border-current before:rounded-full before:animate-[growing_3s_linear_infinite] after:absolute after:content-[''] after:inset-0 after:border-5 after:border-spinner-accent after:rounded-full after:animate-[growing_3s_linear_infinite] after:rotate-y-180 after:rotate-z-90"

	PulsingSpinner SpinnerIcon = "relative before:absolute before:content-[''] before:h-full before:w-full before:border-2 before:border-spinner-accent before:rounded-full before:top-0 before:left-0 before:animate-[pulsing_2s_linear_infinite] after:absolute after:content-[''] after:h-full after:w-full after:border-2 after:border-spinner-accent after:rounded-full after:top-0 after:left-0 after:animate-[pulsing_2s_linear_infinite]"

	DynamicDotSpinner SpinnerIcon = "relative top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2 h-[1em] w-[1em] text-spinner-accent rounded-full indent-[-9999em] animate-[dynamicdots_1.3s_linear_infinite]"

	StaticDotSpinner SpinnerIcon = "relative top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2 h-[1em] w-[1em] text-spinner-accent rounded-full indent-[-9999em] animate-[staticdots_1.1s_ease_infinite]"
)

type SpinnerSize string

const (
	XXSmallSpinner SpinnerSize = "h-4 w-4 text-[2px]"
	XSmallSpinner  SpinnerSize = "h-6 w-6 text-[3px]"
	SmallSpinner   SpinnerSize = "h-8 w-8 text-[4px]"
	MediumSpinner  SpinnerSize = "h-10 w-10 text-[5px]"
	LargeSpinner   SpinnerSize = "h-12 w-12 text-[6px]"
	XLargeSpinner  SpinnerSize = "h-14 w-14 text-[7px]"
	XXLargeSpinner SpinnerSize = "h-16 w-16 text-[8px]"
)

type SpinnerProps struct {
	AccentColor themes.TailwindColor // Optional: Specifies the spinner accent color, defaults to Blue600.
	MainColor   themes.TailwindColor // Optional: Specifies the spinner main color, defaults to current.
	Icon        SpinnerIcon          // Optional: Specifies the spinner icon to use, defaults to SimpleSpinner.
	Size        SpinnerSize          // Optional: Specifies the spinner size, defaults to XSmallSpinner.
}

// Spinner renders an animated spinner for a variety of loading contexts
templ Spinner(props SpinnerProps) {
	<div class="inline-block align-middle">
		<div class={ string(lib.Coalesce(props.Size, XSmallSpinner)) }>
			<span
				if props.AccentColor != "" || props.MainColor != "" {
					style={
						fmt.Sprintf(
							"%s%s",
							fmt.Sprintf("--color-spinner-accent: %s;", string(lib.Coalesce(props.AccentColor, themes.Blue500))),
							lib.IIF(props.MainColor != "", fmt.Sprintf("color: %s", props.MainColor), ""),
						),
					}
				}
				class={
					tw.Merge(
						"inline-block",
						string(lib.Coalesce(props.Size, XSmallSpinner)),
						string(lib.Coalesce(props.Icon, SimpleSpinner)),
					),
				}
			></span>
		</div>
	</div>
}
